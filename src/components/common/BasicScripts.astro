---
import { UI } from '~/utils/config';
---

<script is:inline define:vars={{ defaultTheme: UI.theme }}>
  // Debug flag
  window.debug = true;

  // Ensure script only runs once
  if (window.basic_script) {
    console.log('Script already initialized');
    return;
  }

  window.basic_script = true;

  function applyTheme(theme) {
    if (window.debug) console.log('Applying theme:', theme);
    if (theme === 'dark') {
      document.documentElement.classList.add('dark');
    } else {
      document.documentElement.classList.remove('dark');
    }
  }

  const initTheme = function () {
    if (window.debug) console.log('Initializing theme');
    if ((defaultTheme && defaultTheme.endsWith(':only')) || (!localStorage.theme && defaultTheme !== 'system')) {
      applyTheme(defaultTheme.replace(':only', ''));
    } else if (
      localStorage.theme === 'dark' ||
      (!('theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)
    ) {
      applyTheme('dark');
    } else {
      applyTheme('light');
    }
  };

  function attachEvent(selector, event, fn) {
    if (window.debug) console.log('Attaching event:', event, 'to:', selector);
    const matches = typeof selector === 'string' ? document.querySelectorAll(selector) : selector;
    if (matches && matches.length) {
      matches.forEach((elem) => {
        elem.addEventListener(event, (e) => fn(e, elem), false);
      });
    } else if (window.debug) {
      console.log('No elements found for selector:', selector);
    }
  }

  const onLoad = function () {
    if (window.debug) console.log('Page loaded, initializing components');
    let lastKnownScrollPosition = window.scrollY;
    let ticking = true;

    // Initialize header
    const header = document.getElementById('header');
    if (header) {
      if (window.debug) console.log('Header found');
      header.style.display = 'block';
      header.style.visibility = 'visible';
    } else if (window.debug) {
      console.log('Header element not found - this is expected on some pages');
    }

    // Initialize navigation
    const nav = document.querySelector('nav');
    if (nav) {
      if (window.debug) console.log('Navigation found');
      nav.style.display = 'block';
      nav.style.visibility = 'visible';
    } else if (window.debug) {
      console.log('Navigation element not found - this is expected on some pages');
    }

    // Initialize theme toggle
    const themeToggles = document.querySelectorAll('[data-aw-toggle-color-scheme]');
    if (themeToggles.length) {
      if (window.debug) console.log('Theme toggles found:', themeToggles.length);
      themeToggles.forEach(toggle => {
        toggle.style.display = 'block';
        toggle.style.visibility = 'visible';
      });
    } else if (window.debug) {
      console.log('No theme toggles found - this is expected on some pages');
    }

    // Only attach events if the elements exist
    if (header && nav) {
      attachEvent('#header nav', 'click', function () {
        document.querySelector('[data-aw-toggle-menu]')?.classList.remove('expanded');
        document.body.classList.remove('overflow-hidden');
        document.getElementById('mobile-menu-container')?.classList.remove('expanded');
      });
    }

    const menuToggle = document.querySelector('[data-aw-toggle-menu]');
    if (menuToggle) {
      attachEvent('[data-aw-toggle-menu]', 'click', function (_, elem) {
        elem.classList.toggle('expanded');
        document.body.classList.toggle('overflow-hidden');
        document.getElementById('mobile-menu-container')?.classList.toggle('expanded');
      });
    }

    const menuOverlay = document.getElementById('mobile-menu-overlay');
    if (menuOverlay) {
      attachEvent('#mobile-menu-overlay', 'click', function () {
        document.querySelector('[data-aw-toggle-menu]')?.classList.remove('expanded');
        document.body.classList.remove('overflow-hidden');
        document.getElementById('mobile-menu-container')?.classList.remove('expanded');
      });
    }

    const themeToggle = document.querySelector('[data-aw-toggle-color-scheme]');
    if (themeToggle) {
      attachEvent('[data-aw-toggle-color-scheme]', 'click', function () {
        if (defaultTheme.endsWith(':only')) {
          return;
        }
        document.documentElement.classList.toggle('dark');
        localStorage.theme = document.documentElement.classList.contains('dark') ? 'dark' : 'light';
      });
    }

    const socialShare = document.querySelector('[data-aw-social-share]');
    if (socialShare) {
      attachEvent('[data-aw-social-share]', 'click', function (_, elem) {
        const network = elem.getAttribute('data-aw-social-share');
        const url = encodeURIComponent(elem.getAttribute('data-aw-url'));
        const text = encodeURIComponent(elem.getAttribute('data-aw-text'));

        let href;
        switch (network) {
          case 'facebook':
            href = `https://www.facebook.com/sharer.php?u=${url}`;
            break;
          case 'twitter':
            href = `https://twitter.com/intent/tweet?url=${url}&text=${text}`;
            break;
          case 'linkedin':
            href = `https://www.linkedin.com/shareArticle?mini=true&url=${url}&title=${text}`;
            break;
          case 'whatsapp':
            href = `https://wa.me/?text=${text}%20${url}`;
            break;
          case 'mail':
            href = `mailto:?subject=%22${text}%22&body=${text}%20${url}`;
            break;
          default:
            return;
        }

        const newlink = document.createElement('a');
        newlink.target = '_blank';
        newlink.href = href;
        newlink.click();
      });
    }

    function appyHeaderStylesOnScroll() {
      const header = document.querySelector('#header[data-aw-sticky-header]');
      if (header) {
        if (lastKnownScrollPosition > 60 && !header.classList.contains('scroll')) {
          header.classList.add('scroll');
        } else if (lastKnownScrollPosition <= 60 && header.classList.contains('scroll')) {
          header.classList.remove('scroll');
        }
      }
      ticking = false;
    }

    appyHeaderStylesOnScroll();

    attachEvent([document], 'scroll', function () {
      lastKnownScrollPosition = window.scrollY;
      if (!ticking) {
        window.requestAnimationFrame(() => {
          appyHeaderStylesOnScroll();
        });
        ticking = true;
      }
    });
  };

  const onPageShow = function () {
    if (window.debug) console.log('Page shown, reinitializing components');
    document.documentElement.classList.add('motion-safe:scroll-smooth');
    const elem = document.querySelector('[data-aw-toggle-menu]');
    if (elem) {
      elem.classList.remove('expanded');
    }
    document.body.classList.remove('overflow-hidden');
    document.getElementById('mobile-menu-container')?.classList.remove('expanded');
  };

  // Initialize theme immediately
  initTheme();

  // Set up event listeners
  window.addEventListener('load', onLoad);
  window.addEventListener('pageshow', onPageShow);

  // Handle Astro view transitions
  document.addEventListener('astro:after-swap', () => {
    if (window.debug) console.log('Astro view transition detected');
    initTheme();
    onLoad();
    onPageShow();
  });
</script>
